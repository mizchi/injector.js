(function(){var root,_ref,__slice=[].slice;root=(_ref=typeof window!=="undefined"&&window!==null?window:exports)!=null?_ref:this;root.Injector=function(){var rootInjector;rootInjector=new Injector;Injector.register=function(){return rootInjector.register.apply(rootInjector,arguments)};Injector.unregister=function(){return rootInjector.unregister.apply(rootInjector,arguments)};Injector.mapSingleton=function(){return rootInjector.mapSingleton.apply(rootInjector,arguments)};Injector.mapValue=function(){return rootInjector.mapValue.apply(rootInjector,arguments)};Injector.unmap=function(){return rootInjector.unmap.apply(rootInjector,arguments)};Injector.ensureProperties=function(instance){var key;for(key in instance.constructor.inject){if(instance.hasOwnProperty(key)){throw new Error("Injected property must not be object own property")}if(!instance[k]){throw new Error("lack of ["+key+"] on initialize")}}return true};Injector.prototype._getInjectClass=function(name){var n,val,_i,_len,_ref1;if(typeof name==="string"){val=this.root;_ref1=name.split(".");for(_i=0,_len=_ref1.length;_i<_len;_i++){n=_ref1[_i];val=val[n]}return val}else if(name instanceof Function){return name()}else{return name}};function Injector(root){this.root=root!=null?root:root;this.known_list=[]}Injector.prototype.register=function(Listener){var key,_results;this.known_list.push(Listener);_results=[];for(key in Listener.inject){_results.push(Object.defineProperty(Listener.prototype,key,{value:null,writable:false,configurable:true}))}return _results};Injector.prototype.unregister=function(Listener){var key,n;n=this.known_list.indexOf(Listener);for(key in Listener.inject){Object.defineProperty(Listener.prototype,key,{get:function(){this["_"+key]=null;return null},configurable:true})}return this.known_list.splice(n,1)};Injector.prototype.mapValue=function(){var InjectClass,args,_this=this;InjectClass=arguments[0],args=2<=arguments.length?__slice.call(arguments,1):[];return this.known_list.forEach(function(Listener){var cnt_key,f,instance_key,key,val,_ref1,_results;_ref1=Listener.inject;_results=[];for(key in _ref1){f=_ref1[key];val=_this._getInjectClass(f);if(val!==InjectClass){continue}cnt_key="update#"+key;if(Listener[cnt_key]!=null){Listener[cnt_key]++}else{Object.defineProperty(Listener,cnt_key,{value:0,enumerable:false,writable:true})}instance_key="_"+key;_results.push(Object.defineProperty(Listener.prototype,key,{enumerable:false,configurable:true,get:function(){if(Listener[cnt_key]>this[cnt_key]){delete this[instance_key]}if(!this[instance_key]){this[instance_key]=function(func,args,ctor){ctor.prototype=func.prototype;var child=new ctor,result=func.apply(child,args);return Object(result)===result?result:child}(InjectClass,args,function(){});Object.defineProperty(this,cnt_key,{value:Listener[cnt_key],enumerable:false,configurable:true})}return this[instance_key]}}))}return _results})};Injector.prototype.mapSingleton=function(InjectClass,instance){var _this=this;if(!(instance instanceof InjectClass)){throw""+instance+" is not "+InjectorClass+" instance"}return this.known_list.forEach(function(Listener){var f,key,val,_ref1,_results;_ref1=Listener.inject;_results=[];for(key in _ref1){f=_ref1[key];val=_this._getInjectClass(f);if(val!==InjectClass){continue}if(Listener.prototype[key]){throw""+key+" already exists"}_results.push(Listener.prototype[key]=instance)}return _results})};Injector.prototype.unmap=function(InjectClass){var _this=this;if(InjectClass==null){InjectClass=null}return this.known_list.forEach(function(Listener){var f,key,val,_ref1,_results;_ref1=Listener.inject;_results=[];for(key in _ref1){f=_ref1[key];if(!(!(InjectClass!=null)||_this._getInjectClass(f)===InjectClass)){continue}val=_this._getInjectClass(f);_results.push(Object.defineProperty(Listener.prototype,key,{value:null,writable:false,configurable:true}))}return _results})};return Injector}();if(typeof define==="function"&&typeof define.amd==="object"&&define.amd){define(function(){return Injector})}}).call(this);